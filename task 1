-- Table for books
CREATE TABLE books (
    book_id INT PRIMARY KEY,
    title VARCHAR(100) NOT NULL,
    author VARCHAR(100) NOT NULL,
    isbn VARCHAR(20),
    publication_year INT,
    genre VARCHAR(50),
    total_copies INT,
    available_copies INT
);

-- Table for users/members
CREATE TABLE users (
    user_id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    address VARCHAR(255),
    phone VARCHAR(20),
    email VARCHAR(100)
);

-- Table for transactions (borrowings)
CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    user_id INT,
    book_id INT,
    borrow_date DATE,
    due_date DATE,
    return_date DATE,
    fine_amount DECIMAL(10, 2),
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (book_id) REFERENCES books(book_id)
);

-- Table for fines
CREATE TABLE fines (
    fine_id INT PRIMARY KEY,
    user_id INT,
    fine_date DATE,
    fine_amount DECIMAL(10, 2),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- Table for reservations/holds
CREATE TABLE reservations (
    reservation_id INT PRIMARY KEY,
    user_id INT,
    book_id INT,
    reservation_date DATE,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (book_id) REFERENCES books(book_id)
);

-- Table for genres (optional)
CREATE TABLE genres (
    genre_id INT PRIMARY KEY,
    genre_name VARCHAR(50) UNIQUE
);

-- Table for authors (optional)
CREATE TABLE authors (
    author_id INT PRIMARY KEY,
    author_name VARCHAR(100) UNIQUE
);
